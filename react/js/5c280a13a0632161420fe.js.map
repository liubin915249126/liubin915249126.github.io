{"version":3,"sources":["webpack:///./src/views/timeLine/timeLineData.jsx","webpack:///./src/views/timeLine/TimeLineView.jsx"],"names":["timeLine","label","status","buttons","text","target","links","icon","hlines","index","TimeLine","props","state","currentStatus","statusArr","toLeft","renderArr","parseInt","newArr","i","push","setState","from","to","map","item","arr","className","arrow","item2","index2","arr2","changeStatus","item3","index3","arr3","React","Component"],"mappings":"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","file":"js/5c280a13a0632161420fe.js","sourcesContent":["/**\n * @property {array} timeLine 生成时间轴的数据\n * @property {string} timeLine.label 标题\n * @property {number} timeLine.status 状态\n * @property {array} timeLine.buttons 对应的按钮\n * @property {array} timeLine.links 对应的链接\n */\n\nconst timeLine = [\n     {\n        label:'退出',\n        status:0,\n        buttons:[\n            {\n             text:\"发布\",\n             target:1 \n            }\n        ],\n        links:[\n            { text: '导入', target: '/main/importExcel', icon:'icon-daoru'},\n            { text: '导出', target: '/main/exportExcel', icon: 'icon-daochu' },  \n              ]\n     },\n    {\n        label:'已发布',\n        status:1,\n        buttons:[\n            {\n             text:\"取消发布\",\n             target:0 \n            },\n            {\n             text:\"核算\",\n             target:2 \n            }\n        ],\n        links:[\n            { text: '数据查看', target: '/main/PayrollMain', icon: 'icon-shujuchakan' }\n        ]\n     },\n     {\n        label:'核算中',\n        status:2,\n        buttons:[\n            {\n             text:\"检查结果\",\n             target:3 \n            }\n        ]\n     },\n     {\n        label:'结果检查中',\n        status:3,\n        buttons:[\n            {\n             text:\"改正数据\",\n             target:4 \n            },\n            {\n             text:\"提交审批\",\n             target:5 \n            }\n        ],\n        links: [\n            { text: '报表查询', target: '/main/PayrollReportB14', icon: 'icon-baobiaochaxun' }\n        ]\n     },\n     {\n        label:'数据更正中',\n        status:4,\n        hlines:[{index:1},{index:2}],\n        buttons:[\n            {\n             text:\"发布\",\n             target:1 \n            }\n        ]\n     },\n     {\n        label:'审核中',\n        status:5,\n        buttons:[\n            {\n             text:\"返回检查\",\n             target:3\n            },\n            {\n             text:\"审核通过\",\n             target:0\n            }\n        ],\n        links: [\n            {\n             text: '银行转账', target: '', icon: 'icon-yinhangzhuanzhang1' },\n            { text: '工资单打印', target: '', icon: 'icon-gongzidandayin' },\n            { text: '报税操作', target: '', icon: 'icon-baoshuiguanli' },\n            { text: '社保缴纳', target: '', icon: 'icon-shebaojiaona' }\n        ]\n     },\n]\n\nexport {timeLine}","import React from 'react';\nimport './index.less'\nimport {timeLine} from './timeLineData'\nimport {Icon,Button} from 'antd'\nimport {Link} from 'react-router-dom'\n\nclass TimeLine extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            currentStatus:4,\n             /**\n              * @description statusArr表示时间轴高亮的部分\n              */  \n            statusArr:[],\n            toLeft:false,\n        }\n    }\n    componentDidMount(){\n        this.renderArr()\n    }\n    /**\n     * @method renderArr 根据当前状态以及更新后的状态跟新时间轴\n     * @param status  初始状态和点击后的状态\n     */\n    renderArr(){\n       let currentStatus = parseInt(this.state.currentStatus);\n       let newArr = [];\n       for(let i = 0;i<=currentStatus;i++){\n           newArr.push(true);\n       }\n       /**\n        *@description 修复状态3箭头指向,状态为数据更新时箭头指向向右\n        *\n        */\n       if(currentStatus==4){\n           this.setState({toLeft:true})\n       }else{\n           this.setState({toLeft:false})\n       }\n      \n       this.setState({statusArr:newArr})\n    }\n\n    changeStatus(from,to){\n        this.setState({currentStatus:to},()=>{\n            this.renderArr()\n        })\n    }\n    render(){\n        return <div className='timelineWrap'>\n              {timeLine.map((item,index,arr)=>{\n                  /**\n                   * @description 控制每块的class\n                   */\n                  let className = 'timeItem';\n                  if(this.state.statusArr[index]){\n                      className += ' itemSelected'\n                  }\n                  if(this.state.currentStatus == index){\n                      className += ' currentStatus'\n                  }\n                  /**\n                   * @description 箭头的指向\n                   */\n                  let arrow = <Icon type=\"down\" />\n                  if(index==3&&this.state.toLeft){\n                      arrow = <Icon type=\"left\" />\n                  }\n                  return <div className={className} key={index}>\n                      <span className=\"dot\">\n                          {arrow}\n                      </span>\n                      <div className=\"content\">\n                        <p className=\"label\">{item.label}</p>\n                        <div className=\"btnsWrap\">\n                            \n                            {item.buttons&&item.buttons.map((item2,index2,arr2)=>{\n                               /**\n                                * @description 渲染button\n                                */\n                                  return this.state.currentStatus == index ? <Button\n                                      key={index2}\n                                      onClick={() => { this.changeStatus(item.status, item2.target) }}\n                                  >{item2.text}</Button> : <Button\n                                      key={index2}\n                                  >{item2.text}</Button>\n                                 \n                            })}\n                        </div>\n                               \n                        <div className=\"linksWrap\">\n                            {item.links&&item.links.map((item3,index3,arr3)=>{\n                                /**\n                                * @description 渲染links\n                                */\n                                  return this.state.statusArr[index] ? <Link to={item3.target} key={index3}>\n                                               <i className={`iconfont ${item3.icon}`}></i>{item3.text}\n                                            </Link> : <span key={index3}><i className={`iconfont ${item3.icon}`}></i>{item3.text}</span>\n                            })}\n                        </div>\n                    </div>\n                    <div className=\"hLines\">\n                      </div>    \n                  </div>\n              })}\n              </div>\n    }\n} \nexport default TimeLine"],"sourceRoot":""}